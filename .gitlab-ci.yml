---

image: docker:stable-git

variables:
  DOCKER_HOST: tcp://docker:2375/
  DOCKER_DRIVER: overlay2
  LATEST_TAG: $CI_REGISTRY_IMAGE:latest
  IMAGE_TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG

services:
  - docker:dind

before_script:
  - docker info
  - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
  - chmod +x init.sh
  - chmod +x semver.sh
  - apk add --no-cache bash

stages:
  - build
  - test
  - publish-preview
  - publish

Build:
    stage: build
    script: bash init.sh --build

Unit Tests:
    stage: test
    script:
     - docker pull $IMAGE_TAG
     - docker run --name testing $IMAGE_TAG --test
     - docker cp testing:/sln/results.xml .
    artifacts:
      reports:
        junit: results.xml

SQL Server Integration Tests:
    stage: test
    script: 
      - bash init.sh --integration $IMAGE_TAG sqlserver
      - exit $($?)
    artifacts:
      reports:
        junit: results.xml

SQLite Integration Tests:
    stage: test
    script:
      - bash init.sh --integration $IMAGE_TAG sqlite
      - exit $($?)
    artifacts:
      reports:
        junit: results.xml

Postgres Integration Tests:
    stage: test
    script: 
      - bash init.sh --integration $IMAGE_TAG postgres
      - exit $($?)
    artifacts:
      reports:
        junit: results.xml

MySQL Integration Tests:
    stage: test
    script: 
      - bash init.sh --integration $IMAGE_TAG mysql
      - exit $($?)
    artifacts:
      reports:
        junit: results.xml


Publish Preview:
    stage: publish-preview
    script: bash init.sh --publish-preview

Publish:
    stage: publish
    when: manual
    script: bash init.sh --publish