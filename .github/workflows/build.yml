name: Build

on: [push]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    env:
        DOTNET_CLI_TELEMETRY_OPTOUT: 1
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Version
        id: version
        uses: paulhatch/semantic-version@v1.0.1
        with:
          format: "${major}.${minor}.${patch}.${increment}"
          tag_prefix: ""
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 3.1.100
      - name: Build
        run: "docker build --build-arg VERSION=${VERSION} -t trancesql/build ."
        env:
          VERSION: ${{ steps.version.outputs.version }}
      - name: Unit Tests
        run: docker run --rm trancesql/build --test
      - name: Save Image
        run: docker save -o /tmp/trancesql-image.tar trancesql/build
      - name: Store Image Artifact
        uses: actions/upload-artifact@v1
        with:
          name: trancesql-image.tar
          path: /tmp/trancesql-image.tar
  integration:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        database: [sqlserver, postgres, sqlite, mysql]
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Download Image Artifact
        uses: actions/download-artifact@v1
        with:
          name: trancesql-image.tar
          path: /tmp/
      - name: Load Image
        run: docker load -i /tmp/trancesql-image.tar
      - name: Integration Test for ${{ matrix.database }}
        run: "docker-compose -f 'docker-compose.${{ matrix.database }}.yml' run test"
        env:
          IMAGE_TAG: trancesql/build
  publish-preview:
    name: Publish Prerelease Packages
    runs-on: ubuntu-latest
    needs: integration
    steps:
      - name: Download Image Artifact
        uses: actions/download-artifact@v1
        with:
          name: trancesql-image.tar
          path: /tmp/
      - name: Load Image
        run: docker load -i /tmp/trancesql-image.tar
      - name: Publish preview
        run: docker run --rm trancesql/build --publish --source https://nuget.pkg.github.com/PaulHatch/index.json --api-key ${{secrets.GITHUB_TOKEN}}